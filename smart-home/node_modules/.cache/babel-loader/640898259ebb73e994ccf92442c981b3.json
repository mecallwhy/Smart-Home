{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikop\\\\OneDrive\\\\Pulpit\\\\ela-compil\\\\smart-home\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport Device from \"./components/Device\";\nimport DeviceDetails from \"./components/DeviceDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showDetails, setShowDetails] = useState(false);\n  const [smartDevices, setSmartDevices] = useState();\n  const [detailsToBeShown, setDetailsToBeShown] = useState();\n  useEffect(() => {\n    let oldData;\n    setInterval(() => {\n      fetch(\"http://localhost:3000/devices\").then(resp => resp.json()).then(data => {\n        if (oldData !== data) {\n          setSmartDevices(data);\n          oldData = data;\n          console.log(oldData);\n        }\n      });\n    }, 1000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"main-header\",\n      children: \"myHome\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), smartDevices && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"devices-grid\",\n      children: smartDevices.map(device => {\n        return /*#__PURE__*/_jsxDEV(Device, {\n          device: device,\n          setDetailsToBeShown: setDetailsToBeShown,\n          setShowDetails: setShowDetails\n        }, device.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 24\n    }, this), showDetails && /*#__PURE__*/_jsxDEV(DeviceDetails, {\n      deviceA: detailsToBeShown,\n      setShowDetails: setShowDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"u1ZxiH/cTE/lHO6VcdalT1XpUgU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/mikop/OneDrive/Pulpit/ela-compil/smart-home/src/App.js"],"names":["React","useEffect","useState","Device","DeviceDetails","App","showDetails","setShowDetails","smartDevices","setSmartDevices","detailsToBeShown","setDetailsToBeShown","oldData","setInterval","fetch","then","resp","json","data","console","log","map","device","id"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,EAAhD;AACA,QAAM,CAACQ,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,EAAxD;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAIW,OAAJ;AACAC,IAAAA,WAAW,CAAC,MAAM;AAChBC,MAAAA,KAAK,CAAC,+BAAD,CAAL,CACCC,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEOG,IAAD,IAAQ;AACZ,YAAGN,OAAO,KAAGM,IAAb,EAAkB;AAChBT,UAAAA,eAAe,CAACS,IAAD,CAAf;AACAN,UAAAA,OAAO,GAAGM,IAAV;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AACD;AACF,OARD;AAQG,KATM,EASJ,IATI,CAAX;AAUD,GAZQ,EAYP,EAZO,CAAT;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAI,MAAA,EAAE,EAAC,aAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGJ,YAAY,iBAAI;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA,gBACdA,YAAY,CAACa,GAAb,CAAkBC,MAAD,IAAU;AAC1B,4BAAO,QAAC,MAAD;AAEL,UAAA,MAAM,EAAIA,MAFL;AAGL,UAAA,mBAAmB,EAAEX,mBAHhB;AAIL,UAAA,cAAc,EAAEJ;AAJX,WACAe,MAAM,CAACC,EADP;AAAA;AAAA;AAAA;AAAA,gBAAP;AAMD,OAPA;AADc;AAAA;AAAA;AAAA;AAAA,YAFnB,EAsBGjB,WAAW,iBAAI,QAAC,aAAD;AACd,MAAA,OAAO,EAAII,gBADG;AAEd,MAAA,cAAc,EAAEH;AAFF;AAAA;AAAA;AAAA;AAAA,YAtBlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GA/CQF,G;;KAAAA,G;AAiDT,eAAeA,GAAf","sourcesContent":["import {React, useEffect, useState} from \"react\";\nimport Device from \"./components/Device\";\nimport DeviceDetails from \"./components/DeviceDetails\";\n\nfunction App() {\n  const [showDetails, setShowDetails] = useState(false)\n  const [smartDevices, setSmartDevices] = useState()\n  const [detailsToBeShown, setDetailsToBeShown] = useState()\n\n  useEffect(()=>{\n    let oldData\n    setInterval(() => {\n      fetch(\"http://localhost:3000/devices\")\n      .then(resp => resp.json())\n      .then((data)=>{\n        if(oldData!==data){\n          setSmartDevices(data)\n          oldData = data\n          console.log(oldData)\n        }\n      })}, 1000);\n  },[])\n\n  return (\n    <div className=\"App\">\n      <h1 id=\"main-header\">myHome</h1>\n      {smartDevices && <div id=\"devices-grid\">\n        {smartDevices.map((device)=>{\n          return <Device \n            key={device.id}\n            device = {device}\n            setDetailsToBeShown={setDetailsToBeShown}\n            setShowDetails={setShowDetails}\n            />\n        })}\n        {/* Kod jest pisany pod większą liczbę urządzeń, można odkomentować poniższą zawartość, żeby zobaczyć jak to będzie wyglądać. */}\n        {/* <Device device = {smartDevices[0]}/>\n        <Device device = {smartDevices[0]}/>\n        <Device device = {smartDevices[0]}/>\n        <Device device = {smartDevices[0]}/>\n        <Device device = {smartDevices[0]}/>\n        <Device device = {smartDevices[0]}/>\n        <Device device = {smartDevices[0]}/>\n        <Device device = {smartDevices[0]}/>\n        <Device device = {smartDevices[0]}/> */}\n      </div>}\n      {showDetails && <DeviceDetails \n        deviceA = {detailsToBeShown}\n        setShowDetails={setShowDetails}/>}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}