{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikop\\\\OneDrive\\\\Pulpit\\\\ela-compil\\\\smart-home\\\\src\\\\components\\\\Device.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Device = props => {\n  const {\n    device,\n    setShowDetails\n  } = props; // Ze względu na mało \"user-friendly\" nazwy typów urządzeń i ich stanów połączeń \n  // zdecydowałem się odwzorować je odpowiednio symbolami i kolorami, zamiast opisywać, \n  // bo user pewnie wolałby zobaczyć odwzorowanie graficzne niż np. \"temperatureSensor\" pisane camelCasem :)\n  // Mam nadzieję że to nie problem.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: device.id,\n    className: \"device \" + device.connectionState,\n    onClick: () => {\n      setShowDetails(true);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: require(\"../styles/images/\" + device.type + \".png\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: device.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Device;\nexport default Device;\n\nvar _c;\n\n$RefreshReg$(_c, \"Device\");","map":{"version":3,"sources":["C:/Users/mikop/OneDrive/Pulpit/ela-compil/smart-home/src/components/Device.js"],"names":["Device","props","device","setShowDetails","id","connectionState","require","type","name"],"mappings":";;;AACA,MAAMA,MAAM,GAAIC,KAAD,IAAW;AACxB,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAA2BF,KAAjC,CADwB,CAG1B;AACA;AACA;AACA;;AAEI,sBACE;AACE,IAAA,EAAE,EAAEC,MAAM,CAACE,EADb;AAEE,IAAA,SAAS,EAAE,YAAYF,MAAM,CAACG,eAFhC;AAGE,IAAA,OAAO,EAAE,MAAI;AAACF,MAAAA,cAAc,CAAC,IAAD,CAAd;AAAqB,KAHrC;AAAA,4BAIE;AAAK,MAAA,GAAG,EAAEG,OAAO,CAAC,sBAAoBJ,MAAM,CAACK,IAA3B,GAAgC,MAAjC;AAAjB;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,gBAAKL,MAAM,CAACM;AAAZ;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAjBH;;KAAMR,M;AAmBJ,eAAeA,MAAf","sourcesContent":["\r\nconst Device = (props) => {\r\n  const {device, setShowDetails} = props\r\n\r\n// Ze względu na mało \"user-friendly\" nazwy typów urządzeń i ich stanów połączeń \r\n// zdecydowałem się odwzorować je odpowiednio symbolami i kolorami, zamiast opisywać, \r\n// bo user pewnie wolałby zobaczyć odwzorowanie graficzne niż np. \"temperatureSensor\" pisane camelCasem :)\r\n// Mam nadzieję że to nie problem.\r\n\r\n    return (\r\n      <div \r\n        id={device.id} \r\n        className={\"device \" + device.connectionState}\r\n        onClick={()=>{setShowDetails(true)}}>\r\n        <img src={require(\"../styles/images/\"+device.type+\".png\")} />\r\n        <h3>{device.name}</h3>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Device;\r\n  "]},"metadata":{},"sourceType":"module"}