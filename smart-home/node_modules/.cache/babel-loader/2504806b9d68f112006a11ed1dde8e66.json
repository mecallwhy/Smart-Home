{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikop\\\\OneDrive\\\\Pulpit\\\\ela-compil\\\\smart-home\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport Device from \"./components/Device\";\nimport DeviceDetails from \"./components/DeviceDetails\";\nimport interact from 'https://cdn.interactjs.io/v1.10.11/interactjs/index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showDetails, setShowDetails] = useState(false);\n  const [smartDevices, setSmartDevices] = useState();\n  const [detailsToBeShown, setDetailsToBeShown] = useState(); // target elements with the \"draggable\" class\n\n  interact('.draggable').draggable({\n    // enable inertial throwing\n    inertia: true,\n    // keep the element within the area of it's parent\n    modifiers: [interact.modifiers.restrictRect({\n      restriction: 'parent',\n      endOnly: true\n    })],\n    // enable autoScroll\n    autoScroll: false,\n    listeners: {\n      // call this function on every dragmove event\n      move: dragMoveListener,\n\n      // call this function on every dragend event\n      end(event) {// var textEl = event.target.querySelector('p')\n        // textEl && (textEl.textContent =\n        //   'moved a distance of ' +\n        //   (Math.sqrt(Math.pow(event.pageX - event.x0, 2) +\n        //              Math.pow(event.pageY - event.y0, 2) | 0))\n        //     .toFixed(2) + 'px')\n      }\n\n    }\n  });\n\n  function dragMoveListener(event) {\n    var target = event.target; // keep the dragged position in the data-x/data-y attributes\n\n    var x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx;\n    var y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy; // translate the element\n\n    target.style.transform = 'translate(' + x + 'px, ' + y + 'px)'; // update the posiion attributes\n\n    target.setAttribute('data-x', x);\n    target.setAttribute('data-y', y);\n  } // this function is used later in the resizing and gesture demos\n\n\n  window.dragMoveListener = dragMoveListener;\n  useEffect(() => {\n    setInterval(() => {\n      fetch(\"http://localhost:3000/devices\").then(resp => resp.json()).then(data => {\n        if (data !== smartDevices) {\n          setSmartDevices(data);\n        }\n      });\n    }, 1000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"main-header\",\n      children: \"myHome\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), smartDevices && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"devices-grid\",\n      children: smartDevices.map(device => {\n        return /*#__PURE__*/_jsxDEV(Device, {\n          device: device,\n          setDetailsToBeShown: setDetailsToBeShown,\n          setShowDetails: setShowDetails\n        }, device.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 24\n    }, this), showDetails && /*#__PURE__*/_jsxDEV(DeviceDetails, {\n      device: detailsToBeShown,\n      setShowDetails: setShowDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"u1ZxiH/cTE/lHO6VcdalT1XpUgU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/mikop/OneDrive/Pulpit/ela-compil/smart-home/src/App.js"],"names":["React","useEffect","useState","Device","DeviceDetails","interact","App","showDetails","setShowDetails","smartDevices","setSmartDevices","detailsToBeShown","setDetailsToBeShown","draggable","inertia","modifiers","restrictRect","restriction","endOnly","autoScroll","listeners","move","dragMoveListener","end","event","target","x","parseFloat","getAttribute","dx","y","dy","style","transform","setAttribute","window","setInterval","fetch","then","resp","json","data","map","device","id"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,QAAP,MAAqB,wDAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,EAAhD;AACA,QAAM,CAACS,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,EAAxD,CAHa,CAKf;;AACAG,EAAAA,QAAQ,CAAC,YAAD,CAAR,CACGQ,SADH,CACa;AACT;AACAC,IAAAA,OAAO,EAAE,IAFA;AAGT;AACAC,IAAAA,SAAS,EAAE,CACTV,QAAQ,CAACU,SAAT,CAAmBC,YAAnB,CAAgC;AAC9BC,MAAAA,WAAW,EAAE,QADiB;AAE9BC,MAAAA,OAAO,EAAE;AAFqB,KAAhC,CADS,CAJF;AAUT;AACAC,IAAAA,UAAU,EAAE,KAXH;AAaTC,IAAAA,SAAS,EAAE;AACT;AACAC,MAAAA,IAAI,EAAEC,gBAFG;;AAIT;AACAC,MAAAA,GAAG,CAAEC,KAAF,EAAS,CACV;AAEA;AACA;AACA;AACA;AACA;AACD;;AAbQ;AAbF,GADb;;AA+BA,WAASF,gBAAT,CAA2BE,KAA3B,EAAkC;AAChC,QAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB,CADgC,CAEhC;;AACA,QAAIC,CAAC,GAAG,CAACC,UAAU,CAACF,MAAM,CAACG,YAAP,CAAoB,QAApB,CAAD,CAAV,IAA6C,CAA9C,IAAmDJ,KAAK,CAACK,EAAjE;AACA,QAAIC,CAAC,GAAG,CAACH,UAAU,CAACF,MAAM,CAACG,YAAP,CAAoB,QAApB,CAAD,CAAV,IAA6C,CAA9C,IAAmDJ,KAAK,CAACO,EAAjE,CAJgC,CAMhC;;AACAN,IAAAA,MAAM,CAACO,KAAP,CAAaC,SAAb,GAAyB,eAAeP,CAAf,GAAmB,MAAnB,GAA4BI,CAA5B,GAAgC,KAAzD,CAPgC,CAShC;;AACAL,IAAAA,MAAM,CAACS,YAAP,CAAoB,QAApB,EAA8BR,CAA9B;AACAD,IAAAA,MAAM,CAACS,YAAP,CAAoB,QAApB,EAA8BJ,CAA9B;AACD,GAjDc,CAmDf;;;AACAK,EAAAA,MAAM,CAACb,gBAAP,GAA0BA,gBAA1B;AACErB,EAAAA,SAAS,CAAC,MAAI;AACZmC,IAAAA,WAAW,CAAC,MAAM;AAChBC,MAAAA,KAAK,CAAC,+BAAD,CAAL,CACCC,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEOG,IAAD,IAAQ;AACZ,YAAGA,IAAI,KAAGhC,YAAV,EAAuB;AACrBC,UAAAA,eAAe,CAAC+B,IAAD,CAAf;AACD;AACF,OAND;AAOD,KARU,EAQR,IARQ,CAAX;AASD,GAVQ,EAUP,EAVO,CAAT;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAI,MAAA,EAAE,EAAC,aAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGhC,YAAY,iBAAI;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA,gBACdA,YAAY,CAACiC,GAAb,CAAkBC,MAAD,IAAU;AAC1B,4BAAO,QAAC,MAAD;AAEL,UAAA,MAAM,EAAIA,MAFL;AAGL,UAAA,mBAAmB,EAAE/B,mBAHhB;AAIL,UAAA,cAAc,EAAEJ;AAJX,WACAmC,MAAM,CAACC,EADP;AAAA;AAAA;AAAA;AAAA,gBAAP;AAMD,OAPA;AADc;AAAA;AAAA;AAAA;AAAA,YAFnB,EAsBGrC,WAAW,iBAAI,QAAC,aAAD;AACd,MAAA,MAAM,EAAII,gBADI;AAEd,MAAA,cAAc,EAAEH;AAFF;AAAA;AAAA;AAAA;AAAA,YAtBlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GA7FQF,G;;KAAAA,G;AA+FT,eAAeA,GAAf","sourcesContent":["import {React, useEffect, useState} from \"react\";\nimport Device from \"./components/Device\";\nimport DeviceDetails from \"./components/DeviceDetails\";\nimport interact from 'https://cdn.interactjs.io/v1.10.11/interactjs/index.js'\n\nfunction App() {\n  const [showDetails, setShowDetails] = useState(false)\n  const [smartDevices, setSmartDevices] = useState()\n  const [detailsToBeShown, setDetailsToBeShown] = useState()\n\n// target elements with the \"draggable\" class\ninteract('.draggable')\n  .draggable({\n    // enable inertial throwing\n    inertia: true,\n    // keep the element within the area of it's parent\n    modifiers: [\n      interact.modifiers.restrictRect({\n        restriction: 'parent',\n        endOnly: true\n      })\n    ],\n    // enable autoScroll\n    autoScroll: false,\n\n    listeners: {\n      // call this function on every dragmove event\n      move: dragMoveListener,\n\n      // call this function on every dragend event\n      end (event) {\n        // var textEl = event.target.querySelector('p')\n\n        // textEl && (textEl.textContent =\n        //   'moved a distance of ' +\n        //   (Math.sqrt(Math.pow(event.pageX - event.x0, 2) +\n        //              Math.pow(event.pageY - event.y0, 2) | 0))\n        //     .toFixed(2) + 'px')\n      }\n    }\n  })\n\nfunction dragMoveListener (event) {\n  var target = event.target\n  // keep the dragged position in the data-x/data-y attributes\n  var x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx\n  var y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy\n\n  // translate the element\n  target.style.transform = 'translate(' + x + 'px, ' + y + 'px)'\n\n  // update the posiion attributes\n  target.setAttribute('data-x', x)\n  target.setAttribute('data-y', y)\n}\n\n// this function is used later in the resizing and gesture demos\nwindow.dragMoveListener = dragMoveListener\n  useEffect(()=>{\n    setInterval(() => {\n      fetch(\"http://localhost:3000/devices\")\n      .then(resp => resp.json())\n      .then((data)=>{\n        if(data!==smartDevices){\n          setSmartDevices(data)\n        }\n      })\n    }, 1000);\n  },[])\n  \n  return (\n    <div className=\"App\">\n      <h1 id=\"main-header\">myHome</h1>\n      {smartDevices && <div id=\"devices-grid\">\n        {smartDevices.map((device)=>{\n          return <Device \n            key={device.id}\n            device = {device}\n            setDetailsToBeShown={setDetailsToBeShown}\n            setShowDetails={setShowDetails}\n            />\n        })}\n        {/* Kod jest pisany pod większą liczbę urządzeń, można odkomentować poniższą zawartość, żeby zobaczyć jak to będzie wyglądać. */}\n        {/* <Device device = {smartDevices[0]}/>\n        <Device device = {smartDevices[0]}/>\n        <Device device = {smartDevices[0]}/>\n        <Device device = {smartDevices[0]}/>\n        <Device device = {smartDevices[0]}/>\n        <Device device = {smartDevices[0]}/>\n        <Device device = {smartDevices[0]}/>\n        <Device device = {smartDevices[0]}/>\n        <Device device = {smartDevices[0]}/> */}\n      </div>}\n      {showDetails && <DeviceDetails \n        device = {detailsToBeShown}\n        setShowDetails={setShowDetails}/>}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}