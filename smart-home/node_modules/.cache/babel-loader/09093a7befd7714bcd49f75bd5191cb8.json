{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikop\\\\OneDrive\\\\Pulpit\\\\ela-compil\\\\smart-home\\\\src\\\\components\\\\Device.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Device = props => {\n  _s();\n\n  const {\n    device,\n    setDetailsToBeShown,\n    setShowDetails,\n    detailsCoords\n  } = props; // Ze względu na mało \"user-friendly\" nazwy typów urządzeń i ich stanów połączeń \n  // zdecydowałem się odwzorować je odpowiednio symbolami i kolorami, zamiast opisywać, \n  // bo user pewnie wolałby zobaczyć odwzorowanie graficzne niż np. \"temperatureSensor\" pisane camelCasem :)\n  // Mam nadzieję że to nie problem.\n\n  const handleShowDetails = () => {\n    setDetailsToBeShown(device);\n    setShowDetails(true);\n\n    if (detailsCoords) {\n      alert();\n      document.querySelector('#device-details').setAttribute('data-x', detailsCoords[0]);\n      document.querySelector('device-details').setAttribute('data-y', detailsCoords[1]);\n    }\n  };\n\n  useEffect(() => {\n    setDetailsToBeShown(device);\n  }, [device.connectionState, device.isTurnedOn, device.brightness, device.color, device.powerConsumption, device.temperature]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: device.id,\n    className: \"device \" + device.connectionState,\n    onClick: () => {\n      handleShowDetails();\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: require(\"../styles/images/\" + device.type + \".png\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: device.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Device, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Device;\nexport default Device;\n\nvar _c;\n\n$RefreshReg$(_c, \"Device\");","map":{"version":3,"sources":["C:/Users/mikop/OneDrive/Pulpit/ela-compil/smart-home/src/components/Device.js"],"names":["useEffect","Device","props","device","setDetailsToBeShown","setShowDetails","detailsCoords","handleShowDetails","alert","document","querySelector","setAttribute","connectionState","isTurnedOn","brightness","color","powerConsumption","temperature","id","require","type","name"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA,mBAAT;AAA8BC,IAAAA,cAA9B;AAA8CC,IAAAA;AAA9C,MAA+DJ,KAArE,CADwB,CAG1B;AACA;AACA;AACA;;AAEE,QAAMK,iBAAiB,GAAG,MAAK;AAC7BH,IAAAA,mBAAmB,CAACD,MAAD,CAAnB;AACAE,IAAAA,cAAc,CAAC,IAAD,CAAd;;AACA,QAAIC,aAAJ,EAAkB;AAChBE,MAAAA,KAAK;AACLC,MAAAA,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,EAA0CC,YAA1C,CAAuD,QAAvD,EAAiEL,aAAa,CAAC,CAAD,CAA9E;AACAG,MAAAA,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,EAAyCC,YAAzC,CAAsD,QAAtD,EAAgEL,aAAa,CAAC,CAAD,CAA7E;AACD;AACF,GARD;;AASAN,EAAAA,SAAS,CAAC,MAAI;AACZI,IAAAA,mBAAmB,CAACD,MAAD,CAAnB;AACD,GAFQ,EAEP,CAACA,MAAM,CAACS,eAAR,EACAT,MAAM,CAACU,UADP,EAEAV,MAAM,CAACW,UAFP,EAGAX,MAAM,CAACY,KAHP,EAIAZ,MAAM,CAACa,gBAJP,EAKAb,MAAM,CAACc,WALP,CAFO,CAAT;AAUE,sBACE;AACE,IAAA,EAAE,EAAEd,MAAM,CAACe,EADb;AAEE,IAAA,SAAS,EAAE,YAAYf,MAAM,CAACS,eAFhC;AAGE,IAAA,OAAO,EAAE,MAAI;AAACL,MAAAA,iBAAiB;AAAG,KAHpC;AAAA,4BAIE;AAAK,MAAA,GAAG,EAAEY,OAAO,CAAC,sBAAoBhB,MAAM,CAACiB,IAA3B,GAAgC,MAAjC;AAAjB;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,gBAAKjB,MAAM,CAACkB;AAAZ;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CApCH;;GAAMpB,M;;KAAAA,M;AAsCJ,eAAeA,MAAf","sourcesContent":["import { useEffect } from \"react\"\r\n\r\nconst Device = (props) => {\r\n  const {device, setDetailsToBeShown, setShowDetails, detailsCoords} = props\r\n\r\n// Ze względu na mało \"user-friendly\" nazwy typów urządzeń i ich stanów połączeń \r\n// zdecydowałem się odwzorować je odpowiednio symbolami i kolorami, zamiast opisywać, \r\n// bo user pewnie wolałby zobaczyć odwzorowanie graficzne niż np. \"temperatureSensor\" pisane camelCasem :)\r\n// Mam nadzieję że to nie problem.\r\n\r\n  const handleShowDetails = () =>{\r\n    setDetailsToBeShown(device)\r\n    setShowDetails(true)\r\n    if (detailsCoords){\r\n      alert()\r\n      document.querySelector('#device-details').setAttribute('data-x', detailsCoords[0])\r\n      document.querySelector('device-details').setAttribute('data-y', detailsCoords[1])\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    setDetailsToBeShown(device)\r\n  },[device.connectionState, \r\n    device.isTurnedOn, \r\n    device.brightness,  \r\n    device.color,\r\n    device.powerConsumption,\r\n    device.temperature,\r\n  ])\r\n\r\n    return (\r\n      <div \r\n        id={device.id} \r\n        className={\"device \" + device.connectionState}\r\n        onClick={()=>{handleShowDetails()}}>\r\n        <img src={require(\"../styles/images/\"+device.type+\".png\")} />\r\n        <h3>{device.name}</h3>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Device;\r\n  "]},"metadata":{},"sourceType":"module"}